# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Antimoji < Formula
  desc "High-performance emoji detection and removal CLI tool"
  homepage "https://github.com/jamesainslie/antimoji"
  version "0.9.16"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/jamesainslie/antimoji/releases/download/v0.9.16/antimoji_0.9.16_darwin_amd64.tar.gz"
      sha256 "648f8d792638a762229cec3279a1535c0c6cdaef4f546b79e07abb976e0b5919"

      def install
        bin.install "antimoji"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/jamesainslie/antimoji/releases/download/v0.9.16/antimoji_0.9.16_darwin_arm64.tar.gz"
      sha256 "c580140fd13867663d7c3778bac114d5fc99d811732169e21f2051bfb6b410f4"

      def install
        bin.install "antimoji"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? && Hardware::CPU.is_64_bit?
      url "https://github.com/jamesainslie/antimoji/releases/download/v0.9.16/antimoji_0.9.16_linux_amd64.tar.gz"
      sha256 "2cd5be64a80f7eec4be1de8abf8476aa473c626fe02444d40b9b384f640b9230"
      def install
        bin.install "antimoji"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/jamesainslie/antimoji/releases/download/v0.9.16/antimoji_0.9.16_linux_arm64.tar.gz"
      sha256 "f48f6fbc651e070b4bc84fda26fb668ae98932ee9d89963503e8391ca36b8f8b"
      def install
        bin.install "antimoji"
      end
    end
  end

  def caveats
    <<~EOS
      Antimoji is a high-performance emoji detection and removal tool.

      Basic usage:
        antimoji scan .                    # Scan for emojis
        antimoji clean --backup .          # Remove emojis with backup
        antimoji generate --type=ci-lint . # Generate allowlist config
        antimoji setup-lint --mode=zero-tolerance  # Setup automated linting

      Documentation: https://github.com/jamesainslie/antimoji
    EOS
  end

  test do
    system "#{bin}/antimoji", "version"

    # Test basic functionality
    (testpath/"test.txt").write("Hello world! ðŸ˜€")
    output = shell_output("#{bin}/antimoji scan #{testpath}/test.txt")
    assert_match "1", output
  end
end
